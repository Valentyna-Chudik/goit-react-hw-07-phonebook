{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css","components/Notification/Notification.module.css","components/Form/Form.module.css","components/Container/Container.js","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Loader/Loader.js","components/Form/Form.js","components/Filter/Filter.js","components/Notification/Notification.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterChange","axios","defaults","baseURL","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","Loader","loader","type","color","height","width","Form","useSelector","isLoading","dispatch","useDispatch","onSubmit","number","contact","post","then","data","catch","addContact","useState","setName","setNumber","handleInputChange","e","target","value","reset","form","preventDefault","trim","alert","find","Number","isNaN","label","inputName","input","placeholder","onChange","buttonAdd","Filter","length","labelName","Notification","message","notification","ContactsList","visibleContacts","useEffect","get","onDeleteContact","id","contactId","delete","contactsList","map","contactsItem","contactName","buttonDelete","onClick","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8c8a5e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3-HGb\",\"contactsItem\":\"ContactsList_contactsItem__3UGZR\",\"contactName\":\"ContactsList_contactName__wCaHA\",\"buttonDelete\":\"ContactsList_buttonDelete__2oy-P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1DhkN\",\"labelName\":\"Filter_labelName__3iH-w\",\"input\":\"Filter_input__3S9xA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__BDfV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__33BAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2CZ3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3Ns3l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__EHw6d\",\"inputName\":\"Form_inputName__3URID\",\"input\":\"Form_input__1LGGi\",\"buttonAdd\":\"Form_buttonAdd__1cOeD\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const filterChange = createAction('contacts/FilterChange');\n","import axios from 'axios';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContact = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error)));\n};\n\n// export const fetchContact = () => async dispatch => {\n//   dispatch(fetchContactRequest());\n//   try {\n//     const { data } = await axios.get('/contacts');\n\n//     dispatch(fetchContactSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactError(error));\n//   }\n// };\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import LoaderSpinner from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nexport default function Loader() {\n  return (\n    <div className={styles.loader}>\n      <LoaderSpinner type=\"TailSpin\" color=\"#00BFFF\" height={25} width={25} />\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport {\n  getContacts,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\nimport Loader from '../Loader/Loader';\nimport styles from './Form.module.css';\n\nexport default function Form() {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      alert(`All fields must be completed.`);\n    } else if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n    } else if (contacts.find(contact => contact.number === number)) {\n      alert(`${number} is already in contacts.`);\n    } else if (Number.isNaN(+number)) {\n      alert('Phone number should consist only of digits.');\n    } else {\n      onSubmit(name, number);\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          <span className={styles.inputName}>Name</span>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={handleInputChange}\n          ></input>\n        </label>\n        <label className={styles.label}>\n          <span className={styles.inputName}>Number</span>\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            value={number}\n            onChange={handleInputChange}\n          ></input>\n        </label>\n        {!isLoading && (\n          <button className={styles.buttonAdd} type=\"submit\">\n            Add contact\n          </button>\n        )}\n      </form>\n      {isLoading && <Loader />}\n    </>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filterChange } from '../../redux/contacts/contacts-actions';\nimport {\n  getContacts,\n  getFilter,\n  getError,\n} from '../../redux/contacts/contacts-selectors';\n\nimport styles from './Filter.module.css';\n\nexport default function Filter() {\n  const contacts = useSelector(getContacts);\n  const value = useSelector(getFilter);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(filterChange(e.target.value));\n\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <label className={styles.label}>\n          <span className={styles.labelName}>Find contacts by name</span>\n          <input\n            className={styles.input}\n            type=\"text\"\n            placeholder=\"Search...\"\n            value={value}\n            onChange={onChange}\n          />\n        </label>\n      )}\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\n\nexport default function Notification({ message }) {\n  return <p className={styles.notification}> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContact,\n  deleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport {\n  getVisibleContacts,\n  getError,\n  getLoading,\n} from '../../redux/contacts/contacts-selectors';\nimport Notification from '../Notification/Notification';\nimport styles from './ContactsList.module.css';\n\nexport default function ContactsList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getLoading);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <>\n      {visibleContacts.length > 0 && !error && (\n        <ul className={styles.contactsList}>\n          {visibleContacts.map(({ id, name, number }) => (\n            <li className={styles.contactsItem} key={id}>\n              <p className={styles.contactName}>\n                {name}: {number}\n              </p>\n              <button\n                className={styles.buttonDelete}\n                type=\"button\"\n                onClick={() => onDeleteContact(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n      {!visibleContacts.length && !error && !isLoading && (\n        <Notification message=\"No records yet.\" />\n      )}\n      {error && <h2>{error.message}</h2>}\n    </>\n  );\n}\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactsList/ContactsList';\n\nexport default function App() {\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactsList />\n      </Section>\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterChange,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [filterChange]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\n\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}